== dopc - CLI client for DOPc. For general errors the client will exit with 1, for usage errors with 64.

v0.0.1

=== Global Options
=== -a|--api api

API version to use

[Default Value] 1


=== -u|--url url

URL where DOPc service runs

[Default Value] http://localhost:3000


=== -d|--[no-]debug
Show debug output



=== --help
Show this message



=== --version
Display the program version



=== Commands
==== Command: <tt>execution </tt>
Manage plan executions


===== Commands
====== Command: <tt>clear </tt>
Clear executions


======= Options
======= -p|--plan arg

Remove only executions of this plan

[Default Value] None


======= -s|--status arg

Executions with specified status(es) are removed

[Default Value] done


====== Command: <tt>get </tt>
Get an executions


====== Command: <tt>list </tt>
List all executions


====== Command: <tt>log </tt>
Get an execution's log


====== Command: <tt>new  <plan_name> <task_name> [<stepset>]</tt>
Execute a plan (DOPv and DOPi). The task must be one of: setup (run and deploy), deploy, run, undeploy.


====== Command: <tt>remove </tt>
Remove execution, does only work if not yet running


==== Command: <tt>help  command</tt>
Shows a list of commands or help for one command

Gets help for the application or its commands. Can also list the commands in a way helpful to creating a bash-style completion function
===== Options
===== -c
List commands one per line, to assist with shell completion



==== Command: <tt>ping </tt>
Ping the API


==== Command: <tt>plan </tt>
Manage plans


===== Commands
====== Command: <tt>add </tt>
Add a plan from file


====== Command: <tt>delete </tt>
Delete a plan


====== Command: <tt>get </tt>
Get a plan


======= Options
======= -v|--version arg

Get specific version of plan (if not specified then get latest version)

[Default Value] None


====== Command: <tt>list </tt>
List all plans


====== Command: <tt>reset </tt>
Reset the state of a plan


======= Options
======= -f|--[no-]force
Force state reset



====== Command: <tt>state </tt>
Get the current run state of a plan


====== Command: <tt>update </tt>
Update a plan from a file


====== Command: <tt>versions </tt>
Get version list of a plan


