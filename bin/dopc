#!/usr/bin/env ruby

require 'gli'
require 'base64'
require 'dopc'

include GLI::App

program_desc 'CLI client for DOPc'

version Dopc::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'URL where DOPc service runs'
default_value 'http://localhost:3000'
arg_name 'url'
flag [:u,:url]

desc 'API version to use'
default_value '1'
arg_name 'api'
flag [:a,:api]

desc 'Ping the API'
command :ping do |c|
  c.action do |global_options,options,args|
    client = Dopc::ApiClient.new(global_options[:url], global_options[:api])
    response = client.request(:get, 'ping')
    puts response['pong']
  end
end

desc 'Manage plans'
command :plan do |c|
  c.desc 'List all plans'
  c.command :list do |sc|
    sc.action do |global_options,options,args|
      client = Dopc::ApiClient.new(global_options[:url], global_options[:api])
      response = client.request(:get, 'plans')
      response['plans'].each { |plan| puts plan['name'] }
    end
  end
  c.arg_name '<file>'
  c.desc 'Add a plan'
  c.command :add do |sc|
    sc.action do |global_options,options,args|
      help_now!('Specify plan file to add') if args.empty?
      file = args[0]
      content = Base64.encode64(File.read(file))
      payload = {content: content}
      client = Dopc::ApiClient.new(global_options[:url], global_options[:api])
      response = request.client(:post, 'plans', payload)
      puts response['name']
    end
  end
  c.arg_name '<name>'
  c.desc 'Delete a plan'
  c.command :del do |sc|
    sc.action do |global_options,options,args|
      help_now!('Specify plan to delete') if args.empty?
      name = args[0]
      client = Dopc::ApiClient.new(global_options[:url], global_options[:api])
      response = client.request(:delete, "plans/#{name}")
      puts response['name']
    end
  end
end

exit run(ARGV)
